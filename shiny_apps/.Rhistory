1.01 ^ (10)
1.01 ^ (38)
1.01 ^ (42)
1.01 ^ (50)
1.01 ^ (59)
1.01 ^ (69)
1.01 ^ (72)
1.01 ^ (71)
1.01 ^ (70)
plot(AAPL)
plot(AAPL$AAPL.Open)
plot(AAPL[,1])
library(quantmod)
getSymbols("BAC")
plot(BAC)
plot(BAC$BAC.Open)
lag.xts(BAC$BAC.Open, 1)
BAC$l1 = lag.xts(BAC$BAC.Open, 1)
View(BAC)
BAC$CloseLag = lag.xts(BAC$BAC.Close, 1)
BAC$CloseLagDiff = (BAC$BAC.Close - BAC$CloseLag)/BAC$CloseLag
plot(BAC$CloseLagDiff)
plot(BAC$CloseLagDiff[c(2000:2778)])
plot(BAC$CloseLagDiff[c(2500:2778)])
moving_average = function(stock_data, col = 1, lag_len = 2, replacement = "moving_average"){
stock_data$moving_average = stock_data[,col]
for(x in (lag_len + 1):nrow(stock_data)){
dex = c((x - lag_len):x)
stock_data$moving_average[x] = mean(stock_data[dex, col])
}
colnames(stock_data)[which(colnames(stock_data) == "moving_average")] = replacement
return(stock_data)
}
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
plot(BAC2$moving_average[c(2500:2778)])
integrate(BAC$$CloseLagDiff[c(2000:2778)])
integrate(BAC$CloseLagDiff[c(2000:2778)])
plot(BAC2$moving_average[c(2500:2778)])
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD, aes(Date, CloseLagDiff )) + geom_point()
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, moving_average), col = "red")
BAC$integral = 0
for(x in 1:nrow(BAC)){
BAC$integral = sum(BAC[c(1:x),])
}
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, moving_average), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
for(x in 2:nrow(BAC)){
BAC$integral = sum(BAC[c(1:x),])
}
BAC$integral = 0
for(x in 2:nrow(BAC)){
BAC$integral = sum(BAC[c(2:x),9])
}
for(x in 2:nrow(BAC)){
BAC$integral[x] = sum(BAC[c(2:x),9])
}
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, integral)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, integral)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral-.8), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, integral-.9), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, moving_average), col = "red")
summary(lm(BAC$CloseLagDiff ~ lag.xts(BAC$CloseLagDiff)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff)))
plot((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ,
lag.xts(BAC$CloseLagDiff))
ggplot(BACD, aes(lag.xts(BAC$CloseLagDiff, (BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff))))) + geom_point()
ggplot(BACD, aes(lag.xts(BACD$CloseLagDiff, (BACD$CloseLagDiff - lag.xts(BACD$CloseLagDiff))))) + geom_point()
BAC$diffLagDiff = (BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff))
BAC$lagLagDiff = lag.xts(BAC$CloseLagDiff)
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD, aes(lagLagDiff, diffLagDiff)) + geom_point()
ggplot(BACD, aes(date, diffLagDiff)) + geom_point()
ggplot(BACD, aes(Date, diffLagDiff)) + geom_point()
ggplot(BACD[c(2500:2778),], aes(Date, diffLagDiff)) + geom_path()
for(x in 3:nrow(BAC)){
BAC$integral[x] = sum(BAC[c(3:x),11])
}
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2500:2778),], aes(Date, integral)) + geom_path()
mean(BAC$integral)
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, moving_average), col = "red")
ggplot(BACD, aes(lagLagDiff, diffLagDiff)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, col = integral)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, col = integral, size = integral)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, col = integral), alpha = .1) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, col = integral, alpha = .1)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, col = integral, alpha = integral)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, size = integral, alpha = .1)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, size = integral^2, alpha = .1)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, size = integral^2, alpha = .1, col = BAC.Volume)) + geom_point()
ggplot(BACD, aes(lagLagDiff, diffLagDiff, size = integral^2, alpha = .1, col = BAC.Volume^2)) + geom_point()
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff)))
sumod = summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff)))
BAC$resid = sumod$residuals
plot(BAC$resid)
plot(BAC)
plot(data.frame(BAC))
summary(lm(BAC$resid ~ BAC$CloseLagDiff))
summary(lm(BAC$resid ~ BAC$BAC.Open))
summary(lm(BAC$resid ~ BAC$BAC.integra))
summary(lm(BAC$resid ~ BAC$BAC.integral))
summary(lm(BAC$resid ~ BAC$integral))
summary(lm(BAC$resid ~ BAC$diffLagDiff))
summary(lm(BAC$integral ~ BAC$diffLagDiff))
sumod
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 2)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = -11)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = -1)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 0)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1) + BAC$integral))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1) + lag.xts(BAC$integral, k = 2)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1) + lag.xts(BAC$integral, k = 3)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1) + lag.xts(BAC$integral, k = 4)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$integral, k = 1) + lag.xts(BAC$integral, k = 5)))
summary(lm(  BAC$diffLagDiff ~ lag.xts(BAC$BAC.Volume, k = 1)))
summary(lm(  BAC$BAC.Close ~ lag.xts(BAC$BAC.Volume, k = 1)))
summary(lm(  BAC$BAC.Close ~ 1/lag.xts(BAC$BAC.Volume, k = 1)))
summary(lm(  BAC$BAC.Close ~ 1/(lag.xts(BAC$BAC.Volume, k = 1))))
summary(lm(  1/BAC$BAC.Close ~ lag.xts(BAC$BAC.Volume, k = 1)))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1)))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLag))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLagDiff))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$diffLagDiff))
summary(lm( BAC$BAC.Close ~  BAC$diffLagDiff + BAC$CloseLagDiff))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLagDiff + BAC$diffLagDiff))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLagDiff + BAC$lagLagDiff))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLagDiff + BAC$lagLagDiff + BAC$diffLagDiff))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + BAC$CloseLagDiff ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 2) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 3) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 4) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 5) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 6) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 7) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 8) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 9) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 10) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 7) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 6) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 7) ))
summary(lm( BAC$BAC.Close ~ lag.xts(BAC$BAC.Close, k = 1) + lag.xts(BAC$BAC.Close, k = 7) + BAC$CloseLagDiff))
summary(lm( BAC$CloseLagDiff ~ lag.xts(BAC$CloseLagDiff, k = 1) ))
summary(lm( BAC$CloseLagDiff ~ (lag.xts(BAC$CloseLagDiff, k = 1) - lag.xts(BAC$CloseLagDiff, k = 2)) ))
summary(lm( BAC$CloseLagDiff ~ BAC$diffLagDiff))
summary(lm( BAC$CloseLagDiff ~ lag.xts(BAC$diffLagDiff)))
sumod
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff) + lag.xts(BAC$CloseLagDiff, k = 2)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff) + lag.xts(BAC$CloseLagDiff, k = 3)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff) + lag.xts(BAC$CloseLagDiff, k = 4)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff) + lag.xts(BAC$CloseLagDiff, k = 43))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff) + lag.xts(BAC$CloseLagDiff, k = 3)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$integral)))
summary(lm((BAC$CloseLagDiff - lag.xts(BAC$CloseLagDiff)) ~ lag.xts(BAC$CloseLagDiff)))
sumod$terms
sumod$coefficients
sumod$coefficients[1]
sumod$coefficients[2]
BAC$preds = sumod$coefficients[1] +  (lag.xts(BAC$CloseLagDiff) * sumod$coefficients[2])
BAC$resid2 = BAC$diffLagDiff - BAC$preds
BAC$CLDPred = BAC$preds + BAC$lagLagDiff
BAC$PricePred = BAC$CLDPred * BAC$CloseLag + BAC$CloseLag
plot(BAC.Close - BAC$PricePred)
plot(BAC$BAC.Close - BAC$PricePred)
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
plot(BAC2$moving_average[c(2500:2778)])
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2500:2778),], aes(Date, BAC.Close)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, PricePred), col = "red")
ggplot(BACD[c(2600:2778),], aes(Date, BAC.Close)) + geom_path()+ geom_path(data = BACD[c(2600:2778),], aes(Date, PricePred), col = "red")
ggplot(BACD[c(2600:2778),], aes(Date, BAC.Close - PricePred)) + geom_path()
ggplot(BACD[c(2600:2778),], aes(Date, BAC.Close - PricePred)) + geom_path() + geom_path(data = BACD[c(2600:2778),], aes(Date, CloseLagDiff), col = "red")
ggplot(BACD[c(2500:2778),], aes(Date, CloseLagDiff)) + geom_path()+ geom_path(data = BACD[c(2500:2778),], aes(Date, moving_average), col = "red")
ggplot(BACD[c(2600:2778),], aes(Date, (BAC.Close - PricePred)/BAC.Close)) + geom_path() + geom_path(data = BACD[c(2600:2778),], aes(Date, CloseLagDiff), col = "red")
ggplot(BACD[c(2600:2778),], aes(Date, (BAC.Close - PricePred)/BAC.Close) - CloseLagDiff) + geom_path() + geom_path(data = BACD[c(2600:2778),], aes(Date, CloseLagDiff), col = "red")
ggplot(BACD[c(2600:2778),], aes(Date, (BAC.Close - PricePred)/BAC.Close-CloseLagDiff)) + geom_path() + geom_path(data = BACD[c(2600:2778),], aes(Date, CloseLagDiff), col = "red")
BAC$resid2 = BAC$diffLagDiff + BAC$preds
BAC$CLDPred = BAC$preds + BAC$lagLagDiff
BAC$PricePred = BAC$CLDPred * BAC$CloseLag + BAC$CloseLag
BAC2 = moving_average(BAC, col = 9, lag_len = 10)
BACD = data.frame(BAC2)
BACD$Date = index(BAC)
ggplot(BACD[c(2600:2778),], aes(Date, (BAC.Close - PricePred)/BAC.Close)) + geom_path() + geom_path(data = BACD[c(2600:2778),], aes(Date, CloseLagDiff), col = "red")
ggplot(BACD, aes(Date, BAC.Open - BAC.Close)) + geom_path() + geom_path(data = BACD, aes(Date, BAC.Open - BAC.Low), col = "blue") + geom_path(data = BACD, aes(Date, BAC.High - BAC.Open), col = "red")
ggplot(BACD, aes(Date, BAC.Open - BAC.Close)) + geom_path() + geom_path(data = BACD, aes(Date, BAC.Low - BAC.Open), col = "blue") + geom_path(data = BACD, aes(Date, BAC.High - BAC.Open), col = "red")
summary(lm((BACD$BAC.Open - BACD$BAC.Close) ~ (BACD$BAC.Open - BACD$BAC.High)))
summary(lm((BACD$BAC.Open - BACD$BAC.Close) ~ (BACD$BAC.Open - BACD$BAC.Low)))
summary(lm((BACD$BAC.Open - BACD$BAC.Close) ~ (BACD$BAC.Open - BACD$BAC.Low) + (BACD$BAC.Open - BACD$BAC.High)))
bac = BAC
bac$highLow = bac$BAC.High - bac$BAC.Low
bac$opClo = bac$BAC.Open - bac$BAC.Close
summary(lm(bac$opClo ~ bac$highLow))
bac2 = data.frame(bac)
ggplot(bac, aes(opClo, highLow)) + geom_point()
plot(bac2)
summary(lm(bac$opClo ~ bac$CloseLagDiff))
ggplot(bac, aes(opClo, highLow), col = BAC.Volume) + geom_point()
ggplot(bac, aes(opClo, highLow, col = BAC.Volume)) + geom_point()
bac$highLow = bac$BAC.High - bac$BAC.Low
bac$opClo = bac$BAC.Open - bac$BAC.Close
bac$opHigh = bac$BAC.Open - bac$BAC.High
bac$opLow = bac$BAC.Low - bac$BAC.Open
bac$highLowDiff  =  bac$opHigh - bac$opLow
bac2 = data.frame(bac)
ggplot(bac, aes(opClo, highLow, col = highLowDiff)) + geom_point()
ggplot(bac, aes(opClo, highLowDiff, col = highLow)) + geom_point()
ggplot(bac, aes(highLowDiff)) + geom_density()
ggplot(bac, aes(highLowDiff)) + geom_histogram()
sd(highLowDiff)
sd(bac$highLowDiff)
View(bac)
ggplot(bac, aes(opClo, highLowDiff, col = highLow)) + geom_point()
ggplot(bac, aes(highLowDiff, opClo, col = highLow)) + geom_point()
ggplot(subset(bac, highLowDiff^2 < 1) , aes(highLowDiff, opClo, col = highLow)) + geom_point()
ggplot(subset(bac, highLowDiff^2 < 1) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()
ggplot(bac, aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2 < 1) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac, aes(highLowDiff)) + geom_histogram()
ggplot(subset(bac, highLowDiff^2 < 1) , aes(highLowDiff, opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac , aes(opLow, opHigh, col = opClo)) + geom_point()+ scale_color_distiller(palette = "Spectral")
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = (bac$BAC.Open - bac$BAC.Close)/bac$BAC.Open
bac$opHigh = (bac$BAC.Open - bac$BAC.High)/bac$BAC.Open
bac$opLow = (bac$BAC.Low - bac$BAC.Open)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)/bac$BAC.Open
ggplot(bac , aes(opLow, opHigh, col = opClo)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac, aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2 < .09) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2 < .009) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2 < .0009) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac, aes(highLowDiff)) + geom_histogram()
ggplot(bac, aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .0009) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac, aes(highLowDiff)) + geom_histogram()
ggplot(subset(bac, highLowDiff^2  < .0009) , aes(highLowDiff, opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
ggplot(bac2, aes(opClo, highLow)) + geom_point()
ggplot(bac, aes(opClo, highLow)) + geom_point()
ggplot(bac, aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac, aes(highLowDiff)) + geom_histogram()
ggplot(subset(bac, highLowDiff^2 < .09) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2 < .009) , aes(highLowDiff, opClo, col = CloseLagDiff)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009) , aes(highLowDiff, opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(bac , aes(opLow, opHigh, col = opClo)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009), aes(opLow, opHigh, col = opClo)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009) , aes(highLowDiff, opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009) , aes(highLowDiff, 1/opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009) , aes(1/highLowDiff, 1/opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
ggplot(subset(bac, highLowDiff^2  < .009) , aes(highLowDiff, 1/opClo, col = opHigh)) + geom_point()+ scale_color_distiller(palette = "Spectral")
plot(bac[,c(1, 8:22)])
bac2 = data.frame(bac)
plot(bac2[,c(1, 8:22)])
plot(bac2[,c(1, 8, 18:22)])
plot(bac2[which(bac2$highLowDiff^2  < .009),c(1, 8, 18:22)])
plot(bac2[which(bac2$highLowDiff^2  < .009),c(1, 8, 9, 18:22)])
plot(bac2[which(bac2$highLowDiff^2  < .009),c(1, 8, 9, 11, 12, 18:22)])
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:22)])
summary(lm(bac2$opClo[c(2500:2778)] ~ bac2$opHigh[c(2500:2778)]))
summary(lm(bac2$opClo[c(2500:2778)] ~ bac2$opLow[c(2500:2778)]))
summary(lm(bac2$opClo[c(2500:2778)] ~ bac2$highLowDiff[c(2500:2778)]))
summary(lm(bac2$opClo[c(2500:2778)] ~ bac2$opLow[c(2500:2778)] + bac2$opHigh[c(2500:2778)]))
summary(lm(bac2$opClo[c(2500:2778)] ~ bac2$CloseLagDiff[c(2500:2778)] ))
summary(lm(bac2$diffLagDiff ~ bac2$lagLagDiff))
summary(lm(bac2$CloseLagDiff ~ bac2$lagLagDiff))
summary(lm(bac2$diffLagDiff ~ bac2$lagLagDiff))
summary(lm(bac2$CloseLagDiff ~ bac2$diffLagDiff ))
bac$opCloLag = lag.xts(bac$opClo)
bac2 = data.frame(bac)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:23)])
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
bac2 = data.frame(bac)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:24)])
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac2 = data.frame(bac)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:25)])
'
getSymbols("BAC")
plot(BAC)
plot(BAC$BAC.Open)
lag.xts(BAC$BAC.Open, 1)
BAC$l1 = lag.xts(BAC$BAC.Open, 1)
View(BAC)
BAC$CloseLag = lag.xts(BAC$BAC.Close, 1)
BAC$CloseLagDiff = (BAC$BAC.Close - BAC$CloseLag)/BAC$CloseLag
BAC$OpenLag = lag.xts(BAC$BAC.Open, 1)
BAC$OpenLagDiff = (BAC$BAC.Open - BAC$OpenLag)/BAC$OpenLag
plot(BAC$CloseLagDiff)
plot(BAC$CloseLagDiff[c(2000:2778)])
plot(BAC$CloseLagDiff[c(2500:2778)])
moving_average = function(stock_data, col = 1, lag_len = 2, replacement = "moving_average"){
stock_data$moving_average = stock_data[,col]
for(x in (lag_len + 1):nrow(stock_data)){
dex = c((x - lag_len):x)
stock_data$moving_average[x] = mean(stock_data[dex, col])
}
colnames(stock_data)[which(colnames(stock_data) == "moving_average")] = replacement
return(stock_data)
}
'
BAC$OpenLag = lag.xts(BAC$BAC.Open, 1)
BAC$OpenLagDiff = (BAC$BAC.Open - BAC$OpenLag)/BAC$OpenLag
bac = BAC
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
bac$opCloLag = lag.xts(bac$opClo)
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:27)])
bac2 = data.frame(bac)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:27)])
bac$spread = bac$opHigh + bac$opLow
bac2 = data.frame(bac)
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:28)])
###
plot(bac2[c(2500:2778),c(1, 8, 9, 11, 12, 18:27)])
ggplot(bac2[c(2500:2778),], aes(CloseLagDiff, opClo)) + geom_path()
ggplot(bac2[c(2500:2778),], aes(CloseLagDiff, opClo)) + geom_point()
summary(lm(bac2$opClo ~ bac2$CLDPred + bac2$CloseLag))
mod1 = lm(bac2$diffLagDiff ~ bac2$lagLagDiff)
summary(mod1)
bac2$fitted1 = mod1$fitted.values
bac2$fitted1 = c(NA, NA, mod1$fitted.values)
mod2 = lm(bac2$CloseLagDiff ~ bac2$fitted1)
summary(mod2)
View(bac2)
ggplot(bac2, aes(fitted1, diffLagDiff)) + geom_point()
ggplot(bac2, aes(CloseLagDiff, diffLagDiff)) + geom_point()
ggplot(bac2, aes(fitted1, CloseLagDiff)) + geom_point()
plot(bac2[c(2500:2778) ,])
plot(bac2[c(2500:2778) ,c(1, 8, 9, 11, 12, 18:29)])
bac$opCloFut = lag.xts(bac$opClo, -1)
bac2 = data.frame(bac)
bac2$fitted1 = c(NA, NA, mod1$fitted.values)
plot(bac2[c(2500:2778) ,c(1, 8, 9, 11, 12, 18:29)])
runApp('~/Documents/shiny1/stock_app')
sl = list()
sl$names = c("AAPL")
sl["AAPL"] = "APL"
sl["AAPL"] = getSymbols("AAPL", auto.assign = F)
sl = list()
sl["AAPL"] = getSymbols("AAPL", auto.assign = F)
apl = getSymbols("AAPL", auto.assign = F)
sl["apl"] = apl
sl["apl"] = data.frame(apl)
sl = list(ls, apl)
sl = list()
sl$names = c("AAPL")
sl = list(sl, apl)
sl$ap = apl
sl = list()
sl$ap = apl
sl[["ap"]]
data_list = data.frame()
data_list$Open = c()
data_list$Close = c()
data_list$Stock = c()
data_list = data.frame(matrix(ncol = 3))
data_list$Open = c()
data_list$Close = c()
data_list$Stock = c()
stockDta = stockDta[,c(1,4)]
levels(bac)
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
rep(3, 4)
runApp('~/Documents/shiny1/stock_app')
apl = getSymbols("AAPL", auto.assign = F)
apl = apl[,c(1,4)]
View(apl)
apl$Date = index(apl)
index(apl)
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
typeof(1)
typeof(bac)
length(bac)
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
ggplot(bac, aes(opClo, opCloLag)) + geom_point()
ggplot(bac, aes(opClo, opCloLag, col = opCloFut)) + geom_point()
bac = getSymbols("SQ", auto.assign = F)
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
bac$opCloFut = lag.xts(bac$opClo, -1)
bac$opCloLag = lag.xts(bac$opClo)
bac2 = data.frame(bac)
plot(bac2[which(bac2$highLowDiff^2  < .009),c(1, 8, 9, 11, 12, 18:22)])
colnames(bac) = c("BAC.Open", "BAC.High", "BAC.Low", "BAC.Close", "BAC.Volume", "BAC.Adjusted")
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
bac$opCloLag = lag.xts(bac$opClo)
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
bac$opCloFut = lag.xts(bac$opClo, -1)
bac2 = data.frame(bac)
plot(bac2[which(bac2$highLowDiff^2  < .009),c(1, 8, 9, 11, 12, 18:22)])
bac = getSymbols("SQ", auto.assign = F)
colnames(bac) = c("BAC.Open", "BAC.High", "BAC.Low", "BAC.Close", "BAC.Volume", "BAC.Adjusted")
bac$l1 = lag.xts(bac$BAC.Open, 1)
bac$CloseLag = lag.xts(bac$BAC.Close, 1)
bac$CloseLagDiff = (bac$BAC.Close - bac$CloseLag)/bac$CloseLag
bac$OpenLag = lag.xts(bac$BAC.Open, 1)
bac$OpenLagDiff = (bac$BAC.Open - bac$OpenLag)/bac$OpenLag
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
bac$opCloLag = lag.xts(bac$opClo)
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
bac$opCloFut = lag.xts(bac$opClo, -1)
bac2 = data.frame(bac)
plot(bac2[,c(1, 9:22)])
plot(bac2[,c(1, 9:20)])
symbol_var_gen = function(ticker){
bac = getSymbols(ticker, auto.assign = F)
colnames(bac) = c("BAC.Open", "BAC.High", "BAC.Low", "BAC.Close", "BAC.Volume", "BAC.Adjusted")
bac$l1 = lag.xts(bac$BAC.Open, 1)
bac$CloseLag = lag.xts(bac$BAC.Close, 1)
bac$CloseLagDiff = (bac$BAC.Close - bac$CloseLag)/bac$CloseLag
bac$OpenLag = lag.xts(bac$BAC.Open, 1)
bac$OpenLagDiff = (bac$BAC.Open - bac$OpenLag)/bac$OpenLag
bac$highLow = (bac$BAC.High - bac$BAC.Low)/bac$BAC.Open
bac$opClo = ( bac$BAC.Close - bac$BAC.Open)/bac$BAC.Open
bac$cloOp = (bac$BAC.Open - lag.xts(bac$BAC.Close))/lag.xts(bac$BAC.Close)
bac$opHigh = (bac$BAC.High - bac$BAC.Open)/bac$BAC.Open
bac$opLow = (  bac$BAC.Open - bac$BAC.Low)/bac$BAC.Open
bac$highLowDiff  =  (bac$opHigh - bac$opLow)
bac$opCloLag = lag.xts(bac$opClo)
bac$highLowDiffLag = lag.xts(bac$highLowDiff)
bac$opCloFut = lag.xts(bac$opClo, -1)
bac2 = data.frame(bac)
return(bac2)
}
fb = symbol_var_gen("FB")
plot(fb[,c(1, 9:20)])
View(fb)
plot(fb$opHigh)
ggplot(fb, aes(opHigh, highLowDiff)) + geom_point()
ggplot(fb, aes(opHigh, highLowDiff, col = index(fb))) + geom_point()
ggplot(fb[c(1400:1423),], aes(opHigh, highLowDiff, col = index(fb))) + geom_point()
ggplot(fb[c(1400:1423),], aes(opHigh, highLowDiff, col = index(fb[c(1400:1423),]))) + geom_point()
ggplot(fb[c(1350:1423),], aes(opHigh, highLowDiff, col = index(fb[c(1350:1423),]))) + geom_point()
ggplot(fb[c(1350:1423),], aes(opHigh, highLowDiff, col = opClo)) + geom_point()
ggplot(fb[c(1350:1423),], aes(opHigh, highLowDiff, col = opClo - opHigh)) + geom_point()
fbb = getSymbols("FB", auto.assign = F)
fbb = getSymbols("FB", auto.assign = F, from = "2012-07-24
")
fbb = getSymbols("FB", auto.assign = F)
fbb = getSymbols("FB", auto.assign = F, from = "2011-07-24
")
runApp('~/Documents/shiny1/stock_app')
runApp('~/Documents/shiny1/stock_app')
getOptionChain("GOOG")
library(quantmod)
apl_chain = getOptionChain("AAPL")
apl_price = getQuote("AAPL")
apl_price$Last
275/298
23/298
wine_quality_missing <- read.csv("~/CS/Untitled Folder/wine_quality_missing.csv")
View(wine_quality_missing)
wine2 = na.omit(wine_quality_missing)
mean(wine2$Ash)
mean(wine2$Alcalinity.of.ash)
