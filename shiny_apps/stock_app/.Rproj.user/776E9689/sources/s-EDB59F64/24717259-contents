library(quantmod)
library(shiny)
 
 ui = fluidPage(
   h1("Stock Plotting App"),
   sidebarLayout(
    sidebarPanel(
      p("Type in a stock ID to see a graph."),
      textInput("stock", "Stock ID", value = "AAPL"),
      dateInput("startdate", "Start Date", value = "2015-10-24"),
      dateInput("enddate", "End Date", value = "2017-10-24"),
      submitButton("Apply Changes"), 
      checkboxGroupInput("extras", "Plotting Fancies",
                         c("Add Average True Range", "Add Bollinger Bands", "Add Chaiken Money Flow", 
"Add Double Exponential Moving Average", "Add Detrended Price Oscillator",
"Add Exponential Moving Average", "Add Price Envelope", 
"Add Exponential Volume Weigthed Moving Average", 
"Add Moving Average Convergence Divergence", "Add Momentum",
"Add Rate of Change", "Add Relative Strength Indicator", 
"Add Parabolic Stop and Reverse", "Add Simple Moving Average", 
"Add Stocastic Momentum Index", "Add Triple Smoothed Exponential Oscillator", 
"Add Volume", "Add Welles Wilder's Directional Movement Indicator", "Add Weighted Moving Average
"))
    ),
     mainPanel(textOutput(outputId = "text"),
               plotOutput("stockchart")) 
   )
 )
 
 server = function(input, output){
   
   make_string = function(inp){
     if(inp == "Add Bollinger Bands"){
       return("addBBands()")
     } else if (inp == "Add Chaiken Money Flow"){
       return("addCMF()")
     } else if (inp == "Add Double Exponential Moving Average"){
       return("addDEMA()")
     } else if (inp == "Add Exponential Moving Average"){
       return("addEMA()")
     } else if (inp == "Add Detrended Price Oscillator"){
       return("addDPO()")
     } else if (inp == "Add Price Envelope"){
       return("addEnvelope()")
     } else if (inp == "Add Exponential Volume Weigthed Moving Average"){
       return("addEVWMA()")
     } else if (inp == "Add Price Envelope"){
       return("addEnvelope()")
     } else if (inp == "Add Moving Average Convergence Divergence"){
       return("addMACD()")
     } else if (inp == "Add Momentum"){
       return("addMomentum()")
     } else if (inp == "Add Rate of Change"){
       return("addROC()")
     } else if (inp == "Add Relative Strength Indicator"){
       return("addRSI()")
     } else if (inp == "Add Parabolic Stop and Reverse"){
       return("addSAR()")
     } else if (inp == "Add Simple Moving Average"){
       return("addSMA()")
     } else if (inp == "Add Stocastic Momentum Index"){
       return("addSMI()")
     } else if (inp == "Add Triple Smoothed Exponential Oscillator"){
       return("addTRIX()")
     } else if (inp == "Add Volume"){
       return("addVo()")
     } else if (inp == "Add Weighted Moving Average"){
       return("addWMA()")
     } else if (inp == "Add Average True Range"){
       return("addATR()")
     } else if (inp == "Add Welles Wilder's Directional Movement Indicator"){
       return("addADX()")
     } 
     
    #"Add Moving Average Convergence Divergence", "Add Momentum",
    #"Add Rate of Change", "Add Relative Strength Indicator", 
    #"Add Parabolic Stop and Reverse", "Add Simple Moving Average", 
    #"Add Stocastic Momentum Index", "Add Triple Smoothed Exponential Oscillator", 
    #"Add Volume", "Add Weighted Moving Average
    #"
   }
   
   graphString = ""
   
   output$stockchart = renderPlot({
   extras = input$extras
   
   if(length(extras) > 1){
    graphString = paste(graphString, make_string(extras[1]), sep = "")
    extras = extras[-1]
   for(ex in extras){
     graphString = paste(graphString, make_string(extras[1]), sep = ";")
    }
   } else if (length(extras) == 1){
     graphString = paste(graphString, make_string(extras), sep = "")
   }
     sdate = input$startdate
     edate = input$enddate
     stock = toupper(input$stock)
     output$text = renderText({""})
     tryCatch(getSymbols(stock, from = sdate, to = edate, auto.assign = FALSE),
              #output$text = renderText({""}),
              warning = function(w) {
                output$text = renderText({"Doesn't Seem to be working... try something else"})
                print("warning"); 
              },
              error = function(e) {
                print("error");
                output$text = renderText({"Doesn't Seem to be working... try something else"})
              }
            ) 
     stock = getSymbols(stock, from = sdate, to = edate, auto.assign = FALSE)
     print(graphString)
     if((graphString) != ""){
       print(length(graphString))
     chartSeries(stock, up.col = "blue", dn.col = "red", theme = "white", type = "bars", name = paste(toupper(input$stock), "Time Series Graph"), TA = graphString)
     } else {
       chartSeries(stock, up.col = "blue", dn.col = "red", theme = "white", type = "bars", name = paste(toupper(input$stock), "Time Series Graph"))
     }
       
     print(input$extras)
     
     if("Add Chaiken Money Flow" %in% input$extras){
       print("CHAIKEN")
       #chartSeries(stock, up.col = "blue", dn.col = "red", theme = "white", type = "bars", name = paste(toupper(input$stock), "Time Series Graph"))
       #addCMO()
       addROC()
     }
     if("Add Double Exponential Moving Average" %in% input$extras){
       addDEMA()
     }
     if("Add Detrended Price Oscillator" %in% input$extras){
       addDPO()
     }
     if("Add Exponential Moving Average" %in% input$extras){
       addEMA()
     }
     #addROC()
   })
   #print(input$extras)
 }
 
shinyApp(ui = ui, server = server)
 