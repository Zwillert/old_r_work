library(shiny)
library(tm)
library(twitteR)
library(tidyr)
library(ggplot2)
library(ggmap)
library(wordcloud)




ui = shinyUI(
  fluidPage(
    textInput(inputId = "handle", label = "Twitter Handle"), 
    actionButton(inputId = "but1", label = "Apply Changes"), 
    plotOutput("plot1")
  )
)

server = shinyServer(function(input, output) {
  setup_twitter_oauth("e3jYwJZxRhpPhTIubnJyDPEhq", #consumer_key
                      "CLJPdUgytagatmPz89N3RxiWXCT68G6UW4NlNlgtREPSvlEaFS", #consumer_secret
                      "763105637140004865-ZjkWg8g2r80YLoI0tUEPmQPRcCCYAE4", #access_token
                      "VQOX93Wm737uO6lrBSuhjS0bzHZKHmDKpeWQDSpDToWT7") #access_secret
  
  
  clean.text = function(x)
  {
    # tolower
    x = tolower(x)
    # remove rt
    x = gsub("rt", "", x)
    # remove at
    x = gsub("@\\w+", "", x)
    # remove punctuation
    x = gsub("[[:punct:]]", "", x)
    # remove numbers
    x = gsub("[[:digit:]]", "", x)
    # remove links http
    x = gsub("http\\w+", "", x)
    # remove tabs
    x = gsub("[ |\t]{2,}", "", x)
    # remove blank spaces at the beginning
    x = gsub("^ ", "", x)
    # remove blank spaces at the end
    x = gsub(" $", "", x)
    return(x)
  }
  observeEvent(input$but1, {
  handle = input$handle
  don = getUser(user = handle)
  dhist = userTimeline(don, n = 300)
  #dhist = 
  df = sapply(dhist, function(x) x$getText())
  df = sapply(df, function(row) iconv(row, "latin1", "ASCII", sub=""))
  dff = paste(clean.text(df), collapse = " ")
  dff = removeWords(dff, stopwords("english"))
  
  wrds = Corpus(VectorSource(dff)) #%>% tm_map(removePunctuation) %>% tm_map(removeNumbers)
  #wrds = Corpus(VectorSource(dframe$text)) %>% tm_map(removePunctuation) %>% tm_map(removeNumbers)
  #wrds = wrds[ grep("wrds", iconv(wrds, "latin1", "ASCII", sub="wrds"))]  
  
  #wrds = removeWords(wrds, stopwords("english"))
  #wrds = wrds %>% tm_map(tolower)  %>%  tm_map(removeWords, stopwords("english")) %>%  tm_map(stripWhitespace) %>%  tm_map(PlainTextDocument)
  trms = as.matrix(TermDocumentMatrix(wrds))
  output$plot1 = renderPlot({
  wordcloud(row.names(trms), trms[,1])
  })
  })
})


shinyApp(ui,server)

runApp(ui, server)