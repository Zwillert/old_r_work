shiny::runApp()
rsconnect::deployApp()
rsconnect::deployApp()
runApp()
rsconnect::deployApp()
install.packages("circlize")
rsconnect::deployApp()
rsconnect::deployApp()
puzzle <- read.csv("~/Downloads/puzzle.csv", header=FALSE)
View(puzzle)
plot(puzzle)
density(puzzle$V1)
plot(puzzle$V1)
library(ggplot2)
ggplot(puzzle, aes(V1)) + geom_density()
ggplot(puzzle, aes(V2)) + geom_density()
ggplot(puzzle, aes(V2)) + geom_histogram()
plot(puzzle$V1)
ggplot(puzzle, aes(V1, V2)) + geom_point()
ggplot(puzzle, aes(V1, V2)) + geom_path()
length(which(puzzle$V1 == 0.3971497
))
length(which(puzzle$V2 == 2.1136286
))
puzzle[,(which(puzzle$V2 == 2.1136286
))]
puzzle[(which(puzzle$V2 == 2.1136286
)),]
ggplot(puzzle, aes(V1, V2), alpha = .2) + geom_path()
ggplot(puzzle, aes(V1, V2), alpha = .2) + geom_point()
ggplot(puzzle, aes(V1, V2 alpha = .2)) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2)) + geom_point()
length(table(puzzle$V1))
ggplot(puzzle, aes(V1, V2, alpha = .2, col = V2 == 2.1136286)) + geom_point()
ggplot(puzzle, aes(V2)) + geom_histogram()
ggplot(puzzle, aes(V2)) + geom_histogram(bins = 60)
ggplot(puzzle, aes(V2)) + geom_histogram(bins = 690)
ggplot(puzzle, aes(V1, V2, alpha = .2, col = V2 == 2.1136286)) + geom_point()
ggplot(puzzle, aes(V2)) + geom_histogram(bins = 100)
ggplot(puzzle, aes(V2)) + geom_histogram(bins = 100)
ggplot(puzzle, aes(V1)) + geom_histogram(bins = 100)
ggplot(puzzle[(which(puzzle$V2 == 2.1136286
)),], aes(V1, V2, alpha = .2, col = V2 == 2.1136286)) + geom_path()
ggplot(puzzle[(which(puzzle$V2 == 2.1136286
)),], aes(V1, V2, alpha = .2)) + geom_path()
ggplot(puzzle[(which(puzzle$V2 != 2.1136286
)),], aes(V1, V2, alpha = .2)) + geom_path()
ggplot(puzzle[(which(puzzle$V2 == 2.1136286
)),], aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle[(which(puzzle$V2 , -.5)),], aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle[(which(puzzle$V2 < -.5)),], aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle[(which(puzzle$V2 < -2.5)),], aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2, col = (V2 < -.4 || V2 > 1))) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2, col = (V2 < -.4 ))) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2, col = (V2 < -.4 | V2 > 1))) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2)) + geom_density2d()
ggplot(puzzle[(which(puzzle$V2 != 2.1136286
+ )),], aes(V1, V2, alpha = .2)) + geom_density2d()
ggplot(puzzle[(which(puzzle$V2 != 2.1136286
)),], aes(V1, V2, alpha = .2)) + geom_density2d()
ggplot(puzzle, aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle[which((puzzle$V1 - 1) < .5 ),], aes(V1, V2, alpha = .2)) + geom_point()
ggplot(puzzle, aes(V1, V2, alpha = .2)) + geom_density2d()
ggplot(puzzle[which(abs(puzzle$V1 - .5) < .5 ),], aes(V1, V2, alpha = .2)) + geom_point()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/shiny1/ShineProj1/legisshine_support.R')
y13 = year_merge(seq(100, 112, 2))
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
t2 = y13
ggplot(t2, aes(weighted_comp_rats, eps_diff, col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()
t2 = y13[[2]]
ggplot(t2, aes(weighted_comp_rats, eps_diff, col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()
t13[[2]]$eps_diff = c(t13[[2]]$rat_eps[-1], 0)- t13[[2]]$rat_eps
t13[[2]]$eps_diff = t13[[2]]$eps_diff * (t13[[2]]$eps_diff >=0)
t13[[2]]$eps_diff[which(t13[[2]]$rat_eps == 0)] = 0
t13 = y13
t13[[2]]$eps_diff = c(t13[[2]]$rat_eps[-1], 0)- t13[[2]]$rat_eps
t13[[2]]$eps_diff = t13[[2]]$eps_diff * (t13[[2]]$eps_diff >=0)
t13[[2]]$eps_diff[which(t13[[2]]$rat_eps == 0)] = 0
pf = t13[[1]]
t2 = t13[[2]]
pf$year = pf$year*2 + 1789
t2$year = t2$year*2 + 1789
ggplot(t2, aes(weighted_comp_rats, eps_diff, col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()
ggplot(t2, aes(weighted_comp_rats, log(eps_diff), col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()+ ylab("Logged difference in Epsilon") + xlab("Percentage of Senators in Homogenous connected Component") + ggtitle("Partisan-Epsilon Sensativity")
ggplot(t2, aes(weighted_comp_rats/(comp_rats), log(eps_diff), col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()+ ylab("Logged difference in Epsilon") + xlab("Pct of Senators in Partisan Component Per connected Component") + ggtitle("Scaled Partisan-Epsilon Sensativity")
ggplot(t2, aes(exp(weighted_comp_rats), log(eps_diff), col = comp_rats)) + geom_jitter() + facet_wrap(~year)+ coord_flip()
pl2 = ggplot(pf[which(pf$pid_pct < 1 ),], aes(pep, eps_vec))+ geom_point()+ geom_path(data = t2, aes( max(comp_rats) * weighted_comp_rats, rat_eps), col = "green")+ geom_point(data = pf[which(pf$pid == 100 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .05), alpha = .01, col = "blue") + geom_point(data = pf[which(pf$pid == 200 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01, col = "red"), alpha = .01) + coord_flip() + facet_wrap(~year) + ylab("Epsilon") + xlab("Number of Isolated Senators") + ggtitle("Persistent Homology of the Senate: Time Series")
pl2
pl2 = ggplot(pf[which(pf$pid_pct < 1 ),], aes(pep, eps_vec))+ geom_point()+ geom_path(data = t2, aes( max(comp_rats) * weighted_comp_rats, rat_eps), col = "green")+ geom_path(data = t2, aes( comp_rats, rat_eps), col = "purple")+ geom_point(data = pf[which(pf$pid == 100 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01), alpha = .01, col = "blue") + geom_point(data = pf[which(pf$pid == 200 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01, col = "red"), alpha = .01) + coord_flip() + facet_wrap(~year) + ylab("Epsilon") + xlab("Connected Components") + ggtitle("Persistent Homology of the Senate: Time Series")
pl2
pl2 = ggplot(pf[which(pf$pid_pct < 1) & which(pf$eps_vec > min(pf$eps_vec)) ,], aes(pep, eps_vec))+ geom_point()+ geom_path(data = t2, aes( max(comp_rats) * weighted_comp_rats, rat_eps), col = "green")+ geom_path(data = t2, aes( comp_rats, rat_eps), col = "purple")+ geom_point(data = pf[which(pf$pid == 100 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01), alpha = .01, col = "blue") + geom_point(data = pf[which(pf$pid == 200 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01, col = "red"), alpha = .01) + coord_flip() + facet_wrap(~year) + ylab("Epsilon") + xlab("Connected Components") + ggtitle("Persistent Homology of the Senate: Time Series")
pl2
pl2 = ggplot(pf[which(pf$pid_pct < 1 ),], aes(pep, eps_vec))+ geom_point()+ geom_path(data = t2, aes( max(comp_rats) * weighted_comp_rats, rat_eps), col = "green")+ geom_path(data = t2, aes( comp_rats, rat_eps), col = "purple")+ geom_point(data = pf[which(pf$pid == 100 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01), alpha = .01, col = "blue") + geom_point(data = pf[which(pf$pid == 200 & pf$pid_pct == 1),], aes(pep, eps_vec, alpha = .01, col = "red"), alpha = .01) + coord_flip() + facet_wrap(~year) + ylab("Epsilon") + xlab("Connected Components") + ggtitle("Persistent Homology of the Senate: Time Series")
pl2
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
pl2
source('~/Documents/shiny1/ShineProj1/some_topology_code.R')
runApp()
runApp()
runApp('app2.R')
library(tm)
gcounty_pop <- merge(gcounty, cpop2, all.x = TRUE)
library(shiny)
library(rsconnect)
deployApp()
runApp('~/Documents/shiny1/shiny_anaysis1.R')
runApp('~/Documents/shiny1/shiny_stock1.R')
ls()
pwd()
runApp('~/Documents/shiny1/shiny_stock1.R')
runApp('~/Documents/shiny1/shiny_stock1.R')
runApp('~/Documents/shiny1/shiny_stock1.R')
toupper("aapl")
runApp('~/Documents/shiny1/shiny_stock1.R')
