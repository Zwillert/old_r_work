{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(ggmap)\nlibrary(maps)\nlibrary(mapdata)\nlibrary(stringr)\nlibrary(cdlTools)\n\nmydta <- read.csv(\"~/updated_county_data.csv\")\nusa <- map_data(\"usa\")\nconts <- map_data(\"county\")\nstates <- map_data(\"state\")\n#ggplot(data = conts, mapping = aes(x = long, y = lat, group = group))\n\n#\n#counties <- map_data(\"county\")\n#ca_df <- subset(states, region == \"california\")\n#ca_county <- subset(counties, region == \"california\")\n#ca_base <- ggplot(data = ca_df, mapping = aes(x = long, y = lat, group = group)) + \n#  coord_fixed(1.3) + \n#  geom_polygon(color = \"black\", fill = \"gray\")\n#ca_base + theme_nothing()\n#\n#base2 <- ggplot(data = conts, mapping = aes(x = long, y = lat, group = group)) + \n#  coord_fixed(1.3) + \n#  geom_polygon(color = \"black\", fill = \"gray\")\n#\n#base2 + theme_nothing()\n#\n\nmydta <- read.csv(\"~/updated_county_data.csv\")\nmydta2 = mydta\nmydta = mydta2[,c(1:6, 12:16,23:29,35:40 )]\ncontdex = grep(pattern = \"County\", mydta$area_name)\nmydta$area_name = as.character(mydta$area_name)\ncontnames = tolower(unlist(strsplit(mydta$area_name[contdex], split = \" County\")))\n\n\nda_merge = function(){\n  newm = data.frame(matrix(nrow = nrow(conts), ncol = (ncol(conts) + ncol(mydta))))\n  colnames(newm) = c(colnames(conts), colnames(mydta))\n  newm[c(1:nrow(conts)), c(1:ncol(conts))] = conts\n  for(x in 1:length(contnames)){\n    lild = contdex[x]\n    bigd = which(conts$subregion == contnames[x])\n    print(lild)\n    #print(bigd)\n    for(d in bigd){\n      newm[d, c(ncol(conts) + 1: ncol(mydta))] = mydta[lild,]\n    }\n    \n    #newm[bigd, c(ncol(conts) + 1, ncol(mydta))] = mydta[lild]\n  }\n  return(newm)\n}\n\nda_merge22 = function(){\n  newm = data.frame(matrix(nrow = 1, ncol = (ncol(conts) + ncol(mydta))))\n  \n  colnames(newm) = c(colnames(conts), colnames(mydta))\n  #newm[c(1:nrow(conts)), c(1:ncol(conts))] = conts\n  for(x in 1:length(contnames)){\n    lild = contdex[x]\n    bigd = which(conts$subregion == contnames[x])\n    #bigd = which(str_replace_all(conts$subregion, c(\".\",\" \"), \"\") == str_replace_all(contnames[x], c(\".\",\" \"), \"\"))\n    if (!(length(bigd) > 0)){\n      bigd = which(str_replace_all(conts$subregion, c(\".\",\" \"), \"\") == str_replace_all(contnames[x], c(\".\",\" \"), \"\"))\n    }\n    \n    for(b in 2:length(bigd)){\n      if(bigd[b-1] != bigd[b] - 1){\n        #print(bigd[b])\n        #print(bigd[b-1])\n        bigd = bigd[c(1:(b-1))]\n        break\n      }\n    }\n    print(lild)\n    #print(bigd)\n    #print(contnames[x])\n    repd = data.frame(matrix(rep(mydta[lild,], each = length(bigd)), nrow = length(bigd)))\n    colnames(repd) = colnames(mydta)\n    #View(repd)\n    stuff = cbind(conts[bigd, ], repd)\n    #View(stuff)\n    newm = rbind(newm, stuff)\n    #print(bigd)\n    #for(d in bigd){\n    #  newm[d, c(ncol(conts) + 1: ncol(mydta))] = mydta[lild,]\n    #}\n    \n    #newm[bigd, c(ncol(conts) + 1, ncol(mydta))] = mydta[lild]\n  }\n  newm = newm[-1,]\n  return(newm)\n}\n\n\nnames_to_abbrev = function(){\n  vec = c()\n  #conts$abrev = conts$region\n  for (x in 1:nrow(mydta)){\n    #conts$abrev = fips(conts$region, to = \"Abbreviation\")\n    vec = c(fips(conts$region, to = \"Abbreviation\"))\n    print(x)\n  }\n  conts$abrev = vec\n}\nda_merge23 = function(){\n  newm = mydta[1,]\n  mydta = mydta[c(1:200),]\n  maxv = 0\n  accum = 0\n  stuff = newm\n  \n  for(x in 1:length(contnames)){\n    lild = contdex[x]\n    bigd = which(conts$subregion == contnames[x])\n    st = mydta$state_abbreviation[lild]\n    if (!(length(bigd) > 0)){\n      bigd = which(str_replace_all(conts$subregion, c(\".\",\" \"), \"\") == str_replace_all(contnames[x], c(\".\",\" \"), \"\"))\n    }\n    \n    #print(bigd)\n    #bigd = bigd[which(bigd > maxv)]\n    for(b in 2:length(bigd)){\n      if(!(fips(conts$region, to = \"Abbreviation\") == st)){\n        print(\"Howyd\")\n        break\n      }\n      maxv = bigd[b]\n      accum = accum + 1\n      if(bigd[b-1] != bigd[b] - 1){\n        #print(bigd[b])\n        #print(bigd[b-1])\n        maxv = bigd[b-1]\n        bigd = bigd[c(1:(b-1))]\n        break\n        #print(maxv)\n      }\n    }\n    \n    print(lild)\n    print(contnames[x])\n    print(bigd)\n    print(maxv)\n    print(accum)\n    print(\"howdy\")\n    repd = data.frame(matrix(rep(mydta[lild,], each = length(bigd)), nrow = length(bigd)))\n    colnames(repd) = colnames(mydta)\n    stuff = rbind(stuff, repd)\n  }\n  ##newm = newm[-1,]\n  return(stuff)\n}\n\n\nmydta = mydta[contdex,]\nmydta$contnames = contnames\n#mydta2 =\ncont2 = conts\n\nda_merge2 = function(conts = cont2){\n  vec = c()\n  vec2 = c()\n  for(x in 1:nrow(conts)){\n    st = fips(str_replace(conts$region[x], \"[ ]\", \"\"), to = \"Abbreviation\")\n    cont = conts$subregion[x]\n    dtrow = intersect(which(mydta$state_abbreviation == st), which(mydta$contnames == cont))\n    if (!(length(dtrow) > 0)){\n      dtrow = intersect(which(mydta$state_abbreviation == st), which(str_replace_all(mydta$contnames, \"[. ]\", \"\") == str_replace_all(cont, \"[. ]\", \"\")))\n    }\n    print(cont)\n    print(dtrow)\n    print(x)\n    vec = c(vec, dtrow)\n    vec2 = c(vec2, x)\n  }\n  return(cbind(vec, vec2))\n}\nmmtt = da_merge2()\n\n#View(mmtt)\nbase2 <- ggplot(data = bigmat, mapping = aes(x = long, y = lat, group = group, fill= state_abbreviation)) + \n  coord_fixed(1.3) + \n  geom_polygon()\n\nbase2 + theme_nothing()\nbase2\n#mmtt2 = cbind(cont2, mmtt)\nwrite.csv(x = (bigmat),file =  \"fips_map_and_data.csv\")\n",
    "created" : 1508811448013.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4223038782",
    "id" : "12A6B2B4",
    "lastKnownWriteTime" : 1508859157,
    "last_content_update" : 1508859157,
    "path" : "~/Documents/shiny1/countymap3.R",
    "project_path" : "countymap3.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}